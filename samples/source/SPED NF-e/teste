#include "msobject.ch"
#include "protheus.ch"
#include "totvs.framework.treports.integratedprovider.th"
    
namespace custom.purchaseorder
 
@totvsFrameworkTReportsIntegratedProvider(active=.T., team="Framework", tables="SC7", name="Pedido de Compras", country="BRA", initialRelease="12.1.2310")
//-------------------------------------------------------------------
/*{Protheus.doc} PSSmartViewBusinessObject
Classe para criação do Objeto de Negócio de Prod  x Forn para o TReports
 
@author Vanessa Ruama
@since 02/03/2023
@version 1.0
*/
//-------------------------------------------------------------------  
class PSSmartViewBusinessObject from totvs.framework.treports.integratedprovider.IntegratedProvider
    public method new() as object
    public method getDisplayName() as character
    public method getDescription() as character
    public method getData() as object
    public method getSchema() as object
 
    protected data aFields as array
    protected data lExistPergunte as logical
endclass
 
//-------------------------------------------------------------------
/*{Protheus.doc} new
Método de instância da classe
 
@return object: self
 
@author Vanessa Ruama
@since 02/03/2023
@version 1.0
*/
//-------------------------------------------------------------------   
method new() class PSSmartViewBusinessObject
_Super:new()
self:appendArea("Curso Smart View")
 
self:aFields := {"C7_NUM", "C7_DESCRI", "C7_QUANT", "C7_PRECO", "C7_TOTAL"}

self:lExistPergunte := self:setPergunte("SVCUSTOM")

if !self:lExistPergunte
    self:setErrorStatus(400, "Sem Pergunte", "Verifique se o grupo de perguntas SVCUSTOM existe na sua base!")
endif
return self
 
//-------------------------------------------------------------------
/*{Protheus.doc} getDisplayName
Retorna o nome de exibição do objeto de negócio
 
@return string
 
@author Vanessa Ruama
@since 02/03/2023
@version 1.0
*/
//-------------------------------------------------------------------   
method getDisplayName() as character class PSSmartViewBusinessObject
return "Pedido de Compras Personalizado"
 
//-------------------------------------------------------------------
/*{Protheus.doc} getDescription
Retorna a descrição do objeto de negócio
 
@return string
 
@author Vanessa Ruama
@since 02/03/2023
@version 1.0
*/
//-------------------------------------------------------------------  
method getDescription() as character class PSSmartViewBusinessObject
return "Objeto de Negócio do Pedido de Compras"
 
//-------------------------------------------------------------------
/*{Protheus.doc} getData
Retorna os dados do objeto de negócio
 
@param nPage, numérico, indica a página atual do relatório
@param oFilter, objeto, contém o filtro do TReports
 
@return object: self:oData
 
@author Vanessa Ruama
@since 02/03/2023
@version 1.0
*/
//-------------------------------------------------------------------   
method getData(nPage as numeric, oFilter as object) as object class PSSmartViewBusinessObject
local cQuery as character
local cAlias as character
local nSkip as numeric
local nCount as numeric
local nX as numeric
local jItems as json
local aPDFields as array
local oExec as object
local aAllFields as array
local cId as character
local cRealName as character
local jParams as json
local lHasParam as logical

if !self:lExistPergunte
    return self:oData
else
    nCount := 0
    cQuery := "SELECT " + self:getSQLFields(,,,.T.) + "FROM " + RetSQLName("SC7") + " WHERE D_E_L_E_T_ = ' '"
    
    //Os filtros serão setados na interface do novo TReports
    if oFilter:hasFilter()
        cQuery += " AND " + oFilter:getSQLExpression()
    endif

    jParams := oFilter:getParameters() //método para retorno do json dos parâmetros
    
    lHasParam := !empty(jParams["MV_PAR01"][1]) .and. !empty(jParams["MV_PAR02"][1])

    if lHasParam
        cQuery += " AND  C7_NUM BETWEEN ? AND ?"
    endif
    
    oExec  := FwExecStatement():New(ChangeQuery(cQuery))

    if lHasParam
        oExec:setString(1, jParams["MV_PAR01"][1])
        oExec:setString(2, jParams["MV_PAR02"][1])
    endif

    cAlias := oExec:OpenAlias() 
    
    if nPage > 1
        //Encontra a quantidade de itens que irá pular de acordo com a página atual
        nSkip := ((nPage - 1) * self:getPageSize()) 

        (cAlias)->(dbSkip(nSkip))
    endif  
    
    //Verifica se precisa fazer o tratamento para LGPD
    aPDFields := FwProtectedDataUtil():UsrAccessPDField(__cUserID, self:aFields)
    lObfuscated := len( aPDFields ) != Len(self:aFields)
    aAllFields := self:getStructFields()
    
    while !(cAlias)->(Eof())
        jItems := JsonObject():new()
    
        for nX := 1 To Len(aAllFields)
            cId := aAllFields[nX]:getName()
            cRealName := aAllFields[nX]:getRealName()
            if lObfuscated .and. aScan(aPDFields, cRealName) == 0
                if aAllFields[nX]:getType() == "date"
                    jItems[cId] := nil
                elseif  aAllFields[nX]:getType() == "number"
                    jItems[cId] := Val( Replicate( "9", Len((cAlias)->&(cRealName)) ) )
                else
                    jItems[cId] := FwProtectedDataUtil():ValueAsteriskToAnonymize((cAlias)->&(cRealName))
                endif
            else
                if aAllFields[nX]:getType() == "date"
                    jItems[cId] := totvs.framework.treports.date.stringToTimeStamp((cAlias)->&(cRealName))
                else
                    jItems[cId] := (cAlias)->&(cRealName)
                endif
            endif
        next nX
    
        self:appendData(jItems)
    
        (cAlias)->(DBSkip())
        nCount++
    
        //Sai do loop quando chegar no tamanho de itens da página
        if nCount == self:getPageSize()
        exit
        endif
    enddo 
    
    //Se não for o último registro indica que terá próxima página
    self:setHasNext(!(cAlias)->(Eof())) 
    
    (cAlias)->(DBCloseArea())
endif  
    
return self:oData
 
//-------------------------------------------------------------------
/*{Protheus.doc} getSchema
Retorna a estrutura dos campos
 
@return object: self:oSchema
 
@author Vanessa Ruama
@since 02/03/2023
@version 1.0
*/
//-------------------------------------------------------------------   
method getSchema() as object class PSSmartViewBusinessObject
    self:aliasToSchema("SC7", self:aFields)
return self:oSchema